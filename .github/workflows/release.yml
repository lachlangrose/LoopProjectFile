name: release-please
on: [push, pull_request]

permissions:
  contents: write
  pull-requests: write

jobs:
  

  release-please:
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: 'release-please-config.json'
          manifest-file: '.release-please-manifest.json'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
#if a release is created then run the deploy scripts for github.io, conda, pypi and docker

  conda-upload:
    needs: [release-please]
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-24.04
        - macos-latest
        - windows-latest
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: loopprojectfile-conda-${{ matrix.os }}-${{ matrix.python-version }}
          path: conda
      - uses: conda-incubator/setup-miniconda@v3
      - name: upload all files to conda-forge
        shell: bash -l {0}
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN  }}
          with: 
          skip-existing: true
          verbose: true
        run: |
          conda install -c anaconda anaconda-client -y
          anaconda upload --label main conda/*/*.tar.bz2
        
  pypi-upload:
    needs: [release-please] 
    runs-on:
      - ubuntu-24.04
      - macos-latest
      - windows-latest
    
    if: ${{ needs.release-please.outputs.release_created }}
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: loopprojectfile-dist
          path: dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
